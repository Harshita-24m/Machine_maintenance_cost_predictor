# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w-p99qiZSFujw0CYEqRv7-i7CYg1pAWX
"""

import subprocess
subprocess.run(["pip", "install", "streamlit"])


import streamlit as st
import joblib
import pandas as pd

model,expected_features=joblib.load("model.pkl")

#title
st.title("Machine Maintenance Cost Prediction")

#input form
st.sidebar.header("Enter Machine Details")

def user_input():
  machine_type=st.sidebar.selectbox("Machine Type",["Type A","Type B","Type C","Type D"])
  years_in_use=st.sidebar.number_input("Years the machine has been in use",min_value=0)
  operating_hours=st.sidebar.number_input("Average Operating Hours per day",min_value=0)
  daily_cycles=st.sidebar.number_input("Average Daily Cycles", min_value=0)
  fault_count = st.sidebar.number_input("Fault Count Last Year", min_value=0)
  prev_cost = st.sidebar.number_input("Previous Year Maintenance Cost", min_value=0)
  vibration = st.sidebar.slider("Vibration Level", 0.0, 10.0)
  temperature_spike = st.sidebar.slider("Temperature Spike Frequency", 0.0, 10.0)
  downtime = st.sidebar.number_input("Downtime Days Last Year", min_value=0)

#Create DataFrmae
  data={
    "machine_type":machine_type,
    "machine_age_years":years_in_use,
    "avg_operating_hours_per_day":operating_hours,
    "daily_cycles":daily_cycles,
    "fault_count_last_year":fault_count,
    "previous_year_maintenance_cost":prev_cost,
    "vibration_level":vibration,
    "temperature_spike_frequency":temperature_spike,
    "downtime_days_last_year":downtime
  }

  return pd.DataFrame([data])

input_df=user_input()

input_encoded= pd.get_dummies(input_df)

# Match features exactly
input_encoded = input_encoded.reindex(columns=expected_features, fill_value=0)
# Debug: See what the input looks like
st.write("Expected Features:", expected_features)
st.write("Input Features:", input_encoded.columns.tolist())
st.write("Shape of input_encoded:", input_encoded.shape)
if st.button("Predict Maintenance Cost"):
  prediction=model.predict(input_encoded)
  st.success(f"Predicted Maintenance Cost: Rs.{prediction[0]:,.2f}")

